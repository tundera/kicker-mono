{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "PrismaAppSync": {
        "id": "PrismaAppSync",
        "path": "PrismaAppSync",
        "children": {
          "PrismaAppSync_Api": {
            "id": "PrismaAppSync_Api",
            "path": "PrismaAppSync/PrismaAppSync_Api",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/PrismaAppSync_Api/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::GraphQLApi",
                  "aws:cdk:cloudformation:props": {
                    "authenticationType": "API_KEY",
                    "name": "PrismaAppSync_Api"
                  }
                }
              },
              "Schema": {
                "id": "Schema",
                "path": "PrismaAppSync/PrismaAppSync_Api/Schema",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::GraphQLSchema",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "definition": "enum OrderByArg {\n    ASC\n    DESC\n}\n\ntype Coach {\n    id: Int!\n    createdAt: AWSDateTime!\n    updatedAt: AWSDateTime!\n    handle: String!\n    name: String!\n    teamId: Int\n    type: String\n    isAssistant: String\n    team: Team\n}\n\ntype Player {\n    id: Int!\n    createdAt: AWSDateTime!\n    updatedAt: AWSDateTime!\n    handle: String!\n    name: String!\n    slug: String!\n    teamId: Int\n    height: String!\n    weight: String!\n    number: String\n    position: String\n    team: Team\n}\n\ntype ColorScheme {\n    id: Int!\n    createdAt: AWSDateTime!\n    updatedAt: AWSDateTime!\n    primary: String!\n    secondary: String!\n    team: Team!\n    teamId: Int!\n}\n\ntype Team {\n    id: Int!\n    createdAt: AWSDateTime!\n    updatedAt: AWSDateTime!\n    handle: String!\n    name: String!\n    slug: String!\n    city: String!\n    abbreviation: String!\n    logo: String!\n    logoSlug: String!\n    wins: Int\n    losses: Int\n    winPercentage: Float\n    conference: String!\n    division: String!\n    established: String!\n    primaryColor: String!\n    secondaryColor: String!\n    coaches: [Coach!]\n    colorScheme: ColorScheme\n    players: [Player!]\n}\n\ntype BatchPayload {\n    count: Int\n}\n\ninput CoachCreateInput {\n    handle: String!\n    name: String!\n    type: String\n    isAssistant: String\n    team: CoachTeamCreateRelations\n}\n\ninput CoachUpdateInput {\n    handle: String\n    name: String\n    type: String\n    isAssistant: String\n    team: CoachTeamUpdateRelations\n}\n\ninput CoachWhereInput {\n    OR: [CoachWhereInput]\n    NOT: [CoachWhereInput]\n    AND: [CoachWhereInput]\n    id: Int\n    id_equals: Int\n    id_not: Int\n    id_lt: Int\n    id_lte: Int\n    id_gt: Int\n    id_gte: Int\n    id_contains: Int\n    id_startsWith: Int\n    id_endsWith: Int\n    createdAt: AWSDateTime\n    createdAt_equals: AWSDateTime\n    createdAt_not: AWSDateTime\n    createdAt_lt: AWSDateTime\n    createdAt_lte: AWSDateTime\n    createdAt_gt: AWSDateTime\n    createdAt_gte: AWSDateTime\n    createdAt_contains: AWSDateTime\n    createdAt_startsWith: AWSDateTime\n    createdAt_endsWith: AWSDateTime\n    updatedAt: AWSDateTime\n    updatedAt_equals: AWSDateTime\n    updatedAt_not: AWSDateTime\n    updatedAt_lt: AWSDateTime\n    updatedAt_lte: AWSDateTime\n    updatedAt_gt: AWSDateTime\n    updatedAt_gte: AWSDateTime\n    updatedAt_contains: AWSDateTime\n    updatedAt_startsWith: AWSDateTime\n    updatedAt_endsWith: AWSDateTime\n    handle: String\n    handle_equals: String\n    handle_not: String\n    handle_lt: String\n    handle_lte: String\n    handle_gt: String\n    handle_gte: String\n    handle_contains: String\n    handle_startsWith: String\n    handle_endsWith: String\n    name: String\n    name_equals: String\n    name_not: String\n    name_lt: String\n    name_lte: String\n    name_gt: String\n    name_gte: String\n    name_contains: String\n    name_startsWith: String\n    name_endsWith: String\n    teamId: Int\n    teamId_equals: Int\n    teamId_not: Int\n    teamId_lt: Int\n    teamId_lte: Int\n    teamId_gt: Int\n    teamId_gte: Int\n    teamId_contains: Int\n    teamId_startsWith: Int\n    teamId_endsWith: Int\n    type: String\n    type_equals: String\n    type_not: String\n    type_lt: String\n    type_lte: String\n    type_gt: String\n    type_gte: String\n    type_contains: String\n    type_startsWith: String\n    type_endsWith: String\n    isAssistant: String\n    isAssistant_equals: String\n    isAssistant_not: String\n    isAssistant_lt: String\n    isAssistant_lte: String\n    isAssistant_gt: String\n    isAssistant_gte: String\n    isAssistant_contains: String\n    isAssistant_startsWith: String\n    isAssistant_endsWith: String\n    team: TeamWhereInput\n}\n\ninput CoachWhereUniqueInput {\n    id: Int\n    handle: String\n    name: String\n    teamId: Int\n}\n\ninput CoachOrderByInput {\n    id: OrderByArg\n    createdAt: OrderByArg\n    updatedAt: OrderByArg\n    handle: OrderByArg\n    name: OrderByArg\n    teamId: OrderByArg\n    type: OrderByArg\n    isAssistant: OrderByArg\n}\n\ninput CoachUpdateUniqueInput {\n    data: CoachUpdateInput!\n    where: CoachWhereUniqueInput!\n}\n\ninput CoachUpdateManyInput {\n    data: CoachUpdateInput!\n    where: CoachWhereInput!\n}\n\ninput CoachUpsertInput {\n    create: CoachCreateInput!\n    update: CoachUpdateInput!\n}\n\ninput CoachUpsertUniqueInput {\n    where: CoachWhereUniqueInput!\n    create: CoachCreateInput!\n    update: CoachUpdateInput!\n}\n\ninput CoachDeleteUniqueInput {\n    where: CoachWhereUniqueInput!\n}\n\ninput CoachDeleteManyInput {\n    where: CoachWhereInput!\n}\n\ninput CoachConnectOrCreateInput {\n    where: CoachWhereUniqueInput!\n    create: CoachCreateInput!\n}\n\ninput CoachTeamCreateRelations {\n    create: TeamCreateInput\n    connect: TeamWhereUniqueInput\n    connectOrCreate: TeamConnectOrCreateInput\n}\n\ninput CoachTeamUpdateRelations {\n    create: TeamCreateInput\n    connect: TeamWhereUniqueInput\n    connectOrCreate: TeamConnectOrCreateInput\n    update: TeamUpdateInput\n    upsert: TeamUpsertInput\n    delete: Boolean\n    disconnect: Boolean\n}\n\ninput PlayerCreateInput {\n    handle: String!\n    name: String!\n    slug: String!\n    height: String!\n    weight: String!\n    number: String\n    position: String\n    team: PlayerTeamCreateRelations\n}\n\ninput PlayerUpdateInput {\n    handle: String\n    name: String\n    slug: String\n    height: String\n    weight: String\n    number: String\n    position: String\n    team: PlayerTeamUpdateRelations\n}\n\ninput PlayerWhereInput {\n    OR: [PlayerWhereInput]\n    NOT: [PlayerWhereInput]\n    AND: [PlayerWhereInput]\n    id: Int\n    id_equals: Int\n    id_not: Int\n    id_lt: Int\n    id_lte: Int\n    id_gt: Int\n    id_gte: Int\n    id_contains: Int\n    id_startsWith: Int\n    id_endsWith: Int\n    createdAt: AWSDateTime\n    createdAt_equals: AWSDateTime\n    createdAt_not: AWSDateTime\n    createdAt_lt: AWSDateTime\n    createdAt_lte: AWSDateTime\n    createdAt_gt: AWSDateTime\n    createdAt_gte: AWSDateTime\n    createdAt_contains: AWSDateTime\n    createdAt_startsWith: AWSDateTime\n    createdAt_endsWith: AWSDateTime\n    updatedAt: AWSDateTime\n    updatedAt_equals: AWSDateTime\n    updatedAt_not: AWSDateTime\n    updatedAt_lt: AWSDateTime\n    updatedAt_lte: AWSDateTime\n    updatedAt_gt: AWSDateTime\n    updatedAt_gte: AWSDateTime\n    updatedAt_contains: AWSDateTime\n    updatedAt_startsWith: AWSDateTime\n    updatedAt_endsWith: AWSDateTime\n    handle: String\n    handle_equals: String\n    handle_not: String\n    handle_lt: String\n    handle_lte: String\n    handle_gt: String\n    handle_gte: String\n    handle_contains: String\n    handle_startsWith: String\n    handle_endsWith: String\n    name: String\n    name_equals: String\n    name_not: String\n    name_lt: String\n    name_lte: String\n    name_gt: String\n    name_gte: String\n    name_contains: String\n    name_startsWith: String\n    name_endsWith: String\n    slug: String\n    slug_equals: String\n    slug_not: String\n    slug_lt: String\n    slug_lte: String\n    slug_gt: String\n    slug_gte: String\n    slug_contains: String\n    slug_startsWith: String\n    slug_endsWith: String\n    teamId: Int\n    teamId_equals: Int\n    teamId_not: Int\n    teamId_lt: Int\n    teamId_lte: Int\n    teamId_gt: Int\n    teamId_gte: Int\n    teamId_contains: Int\n    teamId_startsWith: Int\n    teamId_endsWith: Int\n    height: String\n    height_equals: String\n    height_not: String\n    height_lt: String\n    height_lte: String\n    height_gt: String\n    height_gte: String\n    height_contains: String\n    height_startsWith: String\n    height_endsWith: String\n    weight: String\n    weight_equals: String\n    weight_not: String\n    weight_lt: String\n    weight_lte: String\n    weight_gt: String\n    weight_gte: String\n    weight_contains: String\n    weight_startsWith: String\n    weight_endsWith: String\n    number: String\n    number_equals: String\n    number_not: String\n    number_lt: String\n    number_lte: String\n    number_gt: String\n    number_gte: String\n    number_contains: String\n    number_startsWith: String\n    number_endsWith: String\n    position: String\n    position_equals: String\n    position_not: String\n    position_lt: String\n    position_lte: String\n    position_gt: String\n    position_gte: String\n    position_contains: String\n    position_startsWith: String\n    position_endsWith: String\n    team: TeamWhereInput\n}\n\ninput PlayerWhereUniqueInput {\n    id: Int\n    handle: String\n    name: String\n    slug: String\n    teamId: Int\n}\n\ninput PlayerOrderByInput {\n    id: OrderByArg\n    createdAt: OrderByArg\n    updatedAt: OrderByArg\n    handle: OrderByArg\n    name: OrderByArg\n    slug: OrderByArg\n    teamId: OrderByArg\n    height: OrderByArg\n    weight: OrderByArg\n    number: OrderByArg\n    position: OrderByArg\n}\n\ninput PlayerUpdateUniqueInput {\n    data: PlayerUpdateInput!\n    where: PlayerWhereUniqueInput!\n}\n\ninput PlayerUpdateManyInput {\n    data: PlayerUpdateInput!\n    where: PlayerWhereInput!\n}\n\ninput PlayerUpsertInput {\n    create: PlayerCreateInput!\n    update: PlayerUpdateInput!\n}\n\ninput PlayerUpsertUniqueInput {\n    where: PlayerWhereUniqueInput!\n    create: PlayerCreateInput!\n    update: PlayerUpdateInput!\n}\n\ninput PlayerDeleteUniqueInput {\n    where: PlayerWhereUniqueInput!\n}\n\ninput PlayerDeleteManyInput {\n    where: PlayerWhereInput!\n}\n\ninput PlayerConnectOrCreateInput {\n    where: PlayerWhereUniqueInput!\n    create: PlayerCreateInput!\n}\n\ninput PlayerTeamCreateRelations {\n    create: TeamCreateInput\n    connect: TeamWhereUniqueInput\n    connectOrCreate: TeamConnectOrCreateInput\n}\n\ninput PlayerTeamUpdateRelations {\n    create: TeamCreateInput\n    connect: TeamWhereUniqueInput\n    connectOrCreate: TeamConnectOrCreateInput\n    update: TeamUpdateInput\n    upsert: TeamUpsertInput\n    delete: Boolean\n    disconnect: Boolean\n}\n\ninput ColorSchemeCreateInput {\n    primary: String!\n    secondary: String!\n    team: ColorSchemeTeamCreateRelations!\n}\n\ninput ColorSchemeUpdateInput {\n    primary: String\n    secondary: String\n    team: ColorSchemeTeamUpdateRelations\n}\n\ninput ColorSchemeWhereInput {\n    OR: [ColorSchemeWhereInput]\n    NOT: [ColorSchemeWhereInput]\n    AND: [ColorSchemeWhereInput]\n    id: Int\n    id_equals: Int\n    id_not: Int\n    id_lt: Int\n    id_lte: Int\n    id_gt: Int\n    id_gte: Int\n    id_contains: Int\n    id_startsWith: Int\n    id_endsWith: Int\n    createdAt: AWSDateTime\n    createdAt_equals: AWSDateTime\n    createdAt_not: AWSDateTime\n    createdAt_lt: AWSDateTime\n    createdAt_lte: AWSDateTime\n    createdAt_gt: AWSDateTime\n    createdAt_gte: AWSDateTime\n    createdAt_contains: AWSDateTime\n    createdAt_startsWith: AWSDateTime\n    createdAt_endsWith: AWSDateTime\n    updatedAt: AWSDateTime\n    updatedAt_equals: AWSDateTime\n    updatedAt_not: AWSDateTime\n    updatedAt_lt: AWSDateTime\n    updatedAt_lte: AWSDateTime\n    updatedAt_gt: AWSDateTime\n    updatedAt_gte: AWSDateTime\n    updatedAt_contains: AWSDateTime\n    updatedAt_startsWith: AWSDateTime\n    updatedAt_endsWith: AWSDateTime\n    primary: String\n    primary_equals: String\n    primary_not: String\n    primary_lt: String\n    primary_lte: String\n    primary_gt: String\n    primary_gte: String\n    primary_contains: String\n    primary_startsWith: String\n    primary_endsWith: String\n    secondary: String\n    secondary_equals: String\n    secondary_not: String\n    secondary_lt: String\n    secondary_lte: String\n    secondary_gt: String\n    secondary_gte: String\n    secondary_contains: String\n    secondary_startsWith: String\n    secondary_endsWith: String\n    team: TeamWhereInput\n    teamId: Int\n    teamId_equals: Int\n    teamId_not: Int\n    teamId_lt: Int\n    teamId_lte: Int\n    teamId_gt: Int\n    teamId_gte: Int\n    teamId_contains: Int\n    teamId_startsWith: Int\n    teamId_endsWith: Int\n}\n\ninput ColorSchemeWhereUniqueInput {\n    id: Int\n    teamId: Int\n}\n\ninput ColorSchemeOrderByInput {\n    id: OrderByArg\n    createdAt: OrderByArg\n    updatedAt: OrderByArg\n    primary: OrderByArg\n    secondary: OrderByArg\n    teamId: OrderByArg\n}\n\ninput ColorSchemeUpdateUniqueInput {\n    data: ColorSchemeUpdateInput!\n    where: ColorSchemeWhereUniqueInput!\n}\n\ninput ColorSchemeUpdateManyInput {\n    data: ColorSchemeUpdateInput!\n    where: ColorSchemeWhereInput!\n}\n\ninput ColorSchemeUpsertInput {\n    create: ColorSchemeCreateInput!\n    update: ColorSchemeUpdateInput!\n}\n\ninput ColorSchemeUpsertUniqueInput {\n    where: ColorSchemeWhereUniqueInput!\n    create: ColorSchemeCreateInput!\n    update: ColorSchemeUpdateInput!\n}\n\ninput ColorSchemeDeleteUniqueInput {\n    where: ColorSchemeWhereUniqueInput!\n}\n\ninput ColorSchemeDeleteManyInput {\n    where: ColorSchemeWhereInput!\n}\n\ninput ColorSchemeConnectOrCreateInput {\n    where: ColorSchemeWhereUniqueInput!\n    create: ColorSchemeCreateInput!\n}\n\ninput ColorSchemeTeamCreateRelations {\n    create: TeamCreateInput\n    connect: TeamWhereUniqueInput\n    connectOrCreate: TeamConnectOrCreateInput\n}\n\ninput ColorSchemeTeamUpdateRelations {\n    create: TeamCreateInput\n    connect: TeamWhereUniqueInput\n    connectOrCreate: TeamConnectOrCreateInput\n    update: TeamUpdateInput\n    upsert: TeamUpsertInput\n    delete: Boolean\n    disconnect: Boolean\n}\n\ninput TeamCreateInput {\n    handle: String!\n    name: String!\n    slug: String!\n    city: String!\n    abbreviation: String!\n    logo: String!\n    logoSlug: String!\n    wins: Int\n    losses: Int\n    winPercentage: Float\n    conference: String!\n    division: String!\n    established: String!\n    primaryColor: String!\n    secondaryColor: String!\n    coaches: TeamCoachesCreateRelations\n    colorScheme: TeamColorSchemeCreateRelations\n    players: TeamPlayersCreateRelations\n}\n\ninput TeamUpdateInput {\n    handle: String\n    name: String\n    slug: String\n    city: String\n    abbreviation: String\n    logo: String\n    logoSlug: String\n    wins: Int\n    losses: Int\n    winPercentage: Float\n    conference: String\n    division: String\n    established: String\n    primaryColor: String\n    secondaryColor: String\n    coaches: TeamCoachesUpdateRelations\n    colorScheme: TeamColorSchemeUpdateRelations\n    players: TeamPlayersUpdateRelations\n}\n\ninput TeamWhereInput {\n    OR: [TeamWhereInput]\n    NOT: [TeamWhereInput]\n    AND: [TeamWhereInput]\n    id: Int\n    id_equals: Int\n    id_not: Int\n    id_lt: Int\n    id_lte: Int\n    id_gt: Int\n    id_gte: Int\n    id_contains: Int\n    id_startsWith: Int\n    id_endsWith: Int\n    createdAt: AWSDateTime\n    createdAt_equals: AWSDateTime\n    createdAt_not: AWSDateTime\n    createdAt_lt: AWSDateTime\n    createdAt_lte: AWSDateTime\n    createdAt_gt: AWSDateTime\n    createdAt_gte: AWSDateTime\n    createdAt_contains: AWSDateTime\n    createdAt_startsWith: AWSDateTime\n    createdAt_endsWith: AWSDateTime\n    updatedAt: AWSDateTime\n    updatedAt_equals: AWSDateTime\n    updatedAt_not: AWSDateTime\n    updatedAt_lt: AWSDateTime\n    updatedAt_lte: AWSDateTime\n    updatedAt_gt: AWSDateTime\n    updatedAt_gte: AWSDateTime\n    updatedAt_contains: AWSDateTime\n    updatedAt_startsWith: AWSDateTime\n    updatedAt_endsWith: AWSDateTime\n    handle: String\n    handle_equals: String\n    handle_not: String\n    handle_lt: String\n    handle_lte: String\n    handle_gt: String\n    handle_gte: String\n    handle_contains: String\n    handle_startsWith: String\n    handle_endsWith: String\n    name: String\n    name_equals: String\n    name_not: String\n    name_lt: String\n    name_lte: String\n    name_gt: String\n    name_gte: String\n    name_contains: String\n    name_startsWith: String\n    name_endsWith: String\n    slug: String\n    slug_equals: String\n    slug_not: String\n    slug_lt: String\n    slug_lte: String\n    slug_gt: String\n    slug_gte: String\n    slug_contains: String\n    slug_startsWith: String\n    slug_endsWith: String\n    city: String\n    city_equals: String\n    city_not: String\n    city_lt: String\n    city_lte: String\n    city_gt: String\n    city_gte: String\n    city_contains: String\n    city_startsWith: String\n    city_endsWith: String\n    abbreviation: String\n    abbreviation_equals: String\n    abbreviation_not: String\n    abbreviation_lt: String\n    abbreviation_lte: String\n    abbreviation_gt: String\n    abbreviation_gte: String\n    abbreviation_contains: String\n    abbreviation_startsWith: String\n    abbreviation_endsWith: String\n    logo: String\n    logo_equals: String\n    logo_not: String\n    logo_lt: String\n    logo_lte: String\n    logo_gt: String\n    logo_gte: String\n    logo_contains: String\n    logo_startsWith: String\n    logo_endsWith: String\n    logoSlug: String\n    logoSlug_equals: String\n    logoSlug_not: String\n    logoSlug_lt: String\n    logoSlug_lte: String\n    logoSlug_gt: String\n    logoSlug_gte: String\n    logoSlug_contains: String\n    logoSlug_startsWith: String\n    logoSlug_endsWith: String\n    wins: Int\n    wins_equals: Int\n    wins_not: Int\n    wins_lt: Int\n    wins_lte: Int\n    wins_gt: Int\n    wins_gte: Int\n    wins_contains: Int\n    wins_startsWith: Int\n    wins_endsWith: Int\n    losses: Int\n    losses_equals: Int\n    losses_not: Int\n    losses_lt: Int\n    losses_lte: Int\n    losses_gt: Int\n    losses_gte: Int\n    losses_contains: Int\n    losses_startsWith: Int\n    losses_endsWith: Int\n    winPercentage: Float\n    winPercentage_equals: Float\n    winPercentage_not: Float\n    winPercentage_lt: Float\n    winPercentage_lte: Float\n    winPercentage_gt: Float\n    winPercentage_gte: Float\n    winPercentage_contains: Float\n    winPercentage_startsWith: Float\n    winPercentage_endsWith: Float\n    conference: String\n    conference_equals: String\n    conference_not: String\n    conference_lt: String\n    conference_lte: String\n    conference_gt: String\n    conference_gte: String\n    conference_contains: String\n    conference_startsWith: String\n    conference_endsWith: String\n    division: String\n    division_equals: String\n    division_not: String\n    division_lt: String\n    division_lte: String\n    division_gt: String\n    division_gte: String\n    division_contains: String\n    division_startsWith: String\n    division_endsWith: String\n    established: String\n    established_equals: String\n    established_not: String\n    established_lt: String\n    established_lte: String\n    established_gt: String\n    established_gte: String\n    established_contains: String\n    established_startsWith: String\n    established_endsWith: String\n    primaryColor: String\n    primaryColor_equals: String\n    primaryColor_not: String\n    primaryColor_lt: String\n    primaryColor_lte: String\n    primaryColor_gt: String\n    primaryColor_gte: String\n    primaryColor_contains: String\n    primaryColor_startsWith: String\n    primaryColor_endsWith: String\n    secondaryColor: String\n    secondaryColor_equals: String\n    secondaryColor_not: String\n    secondaryColor_lt: String\n    secondaryColor_lte: String\n    secondaryColor_gt: String\n    secondaryColor_gte: String\n    secondaryColor_contains: String\n    secondaryColor_startsWith: String\n    secondaryColor_endsWith: String\n    coaches: CoachWhereInput\n    colorScheme: ColorSchemeWhereInput\n    players: PlayerWhereInput\n}\n\ninput TeamWhereUniqueInput {\n    id: Int\n    handle: String\n    name: String\n    slug: String\n    abbreviation: String\n    logo: String\n    logoSlug: String\n}\n\ninput TeamOrderByInput {\n    id: OrderByArg\n    createdAt: OrderByArg\n    updatedAt: OrderByArg\n    handle: OrderByArg\n    name: OrderByArg\n    slug: OrderByArg\n    city: OrderByArg\n    abbreviation: OrderByArg\n    logo: OrderByArg\n    logoSlug: OrderByArg\n    wins: OrderByArg\n    losses: OrderByArg\n    winPercentage: OrderByArg\n    conference: OrderByArg\n    division: OrderByArg\n    established: OrderByArg\n    primaryColor: OrderByArg\n    secondaryColor: OrderByArg\n}\n\ninput TeamUpdateUniqueInput {\n    data: TeamUpdateInput!\n    where: TeamWhereUniqueInput!\n}\n\ninput TeamUpdateManyInput {\n    data: TeamUpdateInput!\n    where: TeamWhereInput!\n}\n\ninput TeamUpsertInput {\n    create: TeamCreateInput!\n    update: TeamUpdateInput!\n}\n\ninput TeamUpsertUniqueInput {\n    where: TeamWhereUniqueInput!\n    create: TeamCreateInput!\n    update: TeamUpdateInput!\n}\n\ninput TeamDeleteUniqueInput {\n    where: TeamWhereUniqueInput!\n}\n\ninput TeamDeleteManyInput {\n    where: TeamWhereInput!\n}\n\ninput TeamConnectOrCreateInput {\n    where: TeamWhereUniqueInput!\n    create: TeamCreateInput!\n}\n\ninput TeamCoachesCreateRelations {\n    create: [CoachCreateInput]\n    connect: [CoachWhereUniqueInput]\n    connectOrCreate: [CoachConnectOrCreateInput]\n}\n\ninput TeamCoachesUpdateRelations {\n    create: [CoachCreateInput]\n    connect: [CoachWhereUniqueInput]\n    connectOrCreate: [CoachConnectOrCreateInput]\n    update: [CoachUpdateUniqueInput]\n    upsert: [CoachUpsertUniqueInput]\n    delete: [CoachDeleteUniqueInput]\n    disconnect: [CoachWhereUniqueInput]\n    set: [CoachWhereUniqueInput]\n    updateMany: [CoachUpdateManyInput]\n    deleteMany: [CoachDeleteManyInput]\n}\ninput TeamColorSchemeCreateRelations {\n    create: [ColorSchemeCreateInput]\n    connect: [ColorSchemeWhereUniqueInput]\n    connectOrCreate: [ColorSchemeConnectOrCreateInput]\n}\n\ninput TeamColorSchemeUpdateRelations {\n    create: [ColorSchemeCreateInput]\n    connect: [ColorSchemeWhereUniqueInput]\n    connectOrCreate: [ColorSchemeConnectOrCreateInput]\n    update: [ColorSchemeUpdateUniqueInput]\n    upsert: [ColorSchemeUpsertUniqueInput]\n    delete: [ColorSchemeDeleteUniqueInput]\n    disconnect: [ColorSchemeWhereUniqueInput]\n    set: [ColorSchemeWhereUniqueInput]\n    updateMany: [ColorSchemeUpdateManyInput]\n    deleteMany: [ColorSchemeDeleteManyInput]\n}\ninput TeamPlayersCreateRelations {\n    create: [PlayerCreateInput]\n    connect: [PlayerWhereUniqueInput]\n    connectOrCreate: [PlayerConnectOrCreateInput]\n}\n\ninput TeamPlayersUpdateRelations {\n    create: [PlayerCreateInput]\n    connect: [PlayerWhereUniqueInput]\n    connectOrCreate: [PlayerConnectOrCreateInput]\n    update: [PlayerUpdateUniqueInput]\n    upsert: [PlayerUpsertUniqueInput]\n    delete: [PlayerDeleteUniqueInput]\n    disconnect: [PlayerWhereUniqueInput]\n    set: [PlayerWhereUniqueInput]\n    updateMany: [PlayerUpdateManyInput]\n    deleteMany: [PlayerDeleteManyInput]\n}\n\ntype Mutation {\n    createCoach(data: CoachCreateInput!): Coach\n    updateCoach(\n        data: CoachUpdateInput!\n        where: CoachWhereUniqueInput!\n    ): Coach\n    upsertCoach(\n        data: CoachUpdateInput!\n        where: CoachWhereUniqueInput!\n    ): Coach\n    deleteCoach(where: CoachWhereUniqueInput!): Coach\n    deleteManyCoaches(where: CoachWhereInput!): BatchPayload\n\n    createPlayer(data: PlayerCreateInput!): Player\n    updatePlayer(\n        data: PlayerUpdateInput!\n        where: PlayerWhereUniqueInput!\n    ): Player\n    upsertPlayer(\n        data: PlayerUpdateInput!\n        where: PlayerWhereUniqueInput!\n    ): Player\n    deletePlayer(where: PlayerWhereUniqueInput!): Player\n    deleteManyPlayers(\n        where: PlayerWhereInput!\n    ): BatchPayload\n\n    createColorScheme(\n        data: ColorSchemeCreateInput!\n    ): ColorScheme\n    updateColorScheme(\n        data: ColorSchemeUpdateInput!\n        where: ColorSchemeWhereUniqueInput!\n    ): ColorScheme\n    upsertColorScheme(\n        data: ColorSchemeUpdateInput!\n        where: ColorSchemeWhereUniqueInput!\n    ): ColorScheme\n    deleteColorScheme(\n        where: ColorSchemeWhereUniqueInput!\n    ): ColorScheme\n    deleteManyColorSchemes(\n        where: ColorSchemeWhereInput!\n    ): BatchPayload\n\n    createTeam(data: TeamCreateInput!): Team\n    updateTeam(\n        data: TeamUpdateInput!\n        where: TeamWhereUniqueInput!\n    ): Team\n    upsertTeam(\n        data: TeamUpdateInput!\n        where: TeamWhereUniqueInput!\n    ): Team\n    deleteTeam(where: TeamWhereUniqueInput!): Team\n    deleteManyTeams(where: TeamWhereInput!): BatchPayload\n}\n\ntype Query {\n    getCoach(where: CoachWhereUniqueInput!): Coach\n    listCoaches(\n        where: CoachWhereInput\n        orderBy: CoachOrderByInput\n    ): [Coach]\n\n    getPlayer(where: PlayerWhereUniqueInput!): Player\n    listPlayers(\n        where: PlayerWhereInput\n        orderBy: PlayerOrderByInput\n    ): [Player]\n\n    getColorScheme(\n        where: ColorSchemeWhereUniqueInput!\n    ): ColorScheme\n    listColorSchemes(\n        where: ColorSchemeWhereInput\n        orderBy: ColorSchemeOrderByInput\n    ): [ColorScheme]\n\n    getTeam(where: TeamWhereUniqueInput!): Team\n    listTeams(\n        where: TeamWhereInput\n        orderBy: TeamOrderByInput\n    ): [Team]\n}\n\ntype Subscription {\n    onCreatedCoach(\n        id: Int\n        handle: String\n        name: String\n        teamId: Int\n    ): Coach @aws_subscribe(mutations: [\"createCoach\"])\n    onUpdatedCoach(\n        id: Int\n        handle: String\n        name: String\n        teamId: Int\n    ): Coach @aws_subscribe(mutations: [\"updateCoach\"])\n    onDeletedCoach(\n        id: Int\n        handle: String\n        name: String\n        teamId: Int\n    ): Coach @aws_subscribe(mutations: [\"deleteCoach\"])\n\n    onCreatedPlayer(\n        id: Int\n        handle: String\n        name: String\n        slug: String\n        teamId: Int\n    ): Player @aws_subscribe(mutations: [\"createPlayer\"])\n    onUpdatedPlayer(\n        id: Int\n        handle: String\n        name: String\n        slug: String\n        teamId: Int\n    ): Player @aws_subscribe(mutations: [\"updatePlayer\"])\n    onDeletedPlayer(\n        id: Int\n        handle: String\n        name: String\n        slug: String\n        teamId: Int\n    ): Player @aws_subscribe(mutations: [\"deletePlayer\"])\n\n    onCreatedColorScheme(id: Int, teamId: Int): ColorScheme\n        @aws_subscribe(mutations: [\"createColorScheme\"])\n    onUpdatedColorScheme(id: Int, teamId: Int): ColorScheme\n        @aws_subscribe(mutations: [\"updateColorScheme\"])\n    onDeletedColorScheme(id: Int, teamId: Int): ColorScheme\n        @aws_subscribe(mutations: [\"deleteColorScheme\"])\n\n    onCreatedTeam(\n        id: Int\n        handle: String\n        name: String\n        slug: String\n        abbreviation: String\n    ): Team @aws_subscribe(mutations: [\"createTeam\"])\n    onUpdatedTeam(\n        id: Int\n        handle: String\n        name: String\n        slug: String\n        abbreviation: String\n    ): Team @aws_subscribe(mutations: [\"updateTeam\"])\n    onDeletedTeam(\n        id: Int\n        handle: String\n        name: String\n        slug: String\n        abbreviation: String\n    ): Team @aws_subscribe(mutations: [\"deleteTeam\"])\n}\n"
                  }
                }
              },
              "DefaultApiKey": {
                "id": "DefaultApiKey",
                "path": "PrismaAppSync/PrismaAppSync_Api/DefaultApiKey",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::ApiKey",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    }
                  }
                }
              }
            }
          },
          "PrismaAppSyncApiEndpoint": {
            "id": "PrismaAppSyncApiEndpoint",
            "path": "PrismaAppSync/PrismaAppSyncApiEndpoint"
          },
          "PrismaAppSyncApiKey": {
            "id": "PrismaAppSyncApiKey",
            "path": "PrismaAppSync/PrismaAppSyncApiKey",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::AppSync::ApiKey",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Fn::GetAtt": [
                    "PrismaAppSyncApi6F88B930",
                    "ApiId"
                  ]
                },
                "description": "PrismaAppSync_api-key",
                "expires": 1647820746
              }
            }
          },
          "PrismaAppSyncCfnApiKey": {
            "id": "PrismaAppSyncCfnApiKey",
            "path": "PrismaAppSync/PrismaAppSyncCfnApiKey"
          },
          "PrismaAppSync_FuncExecutionRole": {
            "id": "PrismaAppSync_FuncExecutionRole",
            "path": "PrismaAppSync/PrismaAppSync_FuncExecutionRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/PrismaAppSync_FuncExecutionRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "lambda.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                          ]
                        ]
                      }
                    ],
                    "policies": [
                      {
                        "policyName": "customApiFunctionPolicy",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "ec2:DescribeNetworkInterfaces",
                                "ec2:CreateNetworkInterface",
                                "ec2:DeleteNetworkInterface",
                                "ec2:DescribeInstances",
                                "ec2:AttachNetworkInterface"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    ],
                    "roleName": "PrismaAppSync_FuncExecutionRole"
                  }
                }
              }
            }
          },
          "PrismaAppSync_Function": {
            "id": "PrismaAppSync_Function",
            "path": "PrismaAppSync/PrismaAppSync_Function",
            "children": {
              "Code": {
                "id": "Code",
                "path": "PrismaAppSync/PrismaAppSync_Function/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "PrismaAppSync/PrismaAppSync_Function/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "PrismaAppSync/PrismaAppSync_Function/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/PrismaAppSync_Function/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352S3Bucket0EE6FFF2"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352S3VersionKeyBF4BA9B0"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352S3VersionKeyBF4BA9B0"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "index.main",
                    "role": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncFuncExecutionRoleD3140AC0",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "environment": {
                      "variables": {
                        "CONNECTION_URL": "postgresql://tundera:xzeznwj1tuvr9b06@db-postgresql-tunderadev-do-user-8667582-0.b.db.ondigitalocean.com:25061/tunderadev-pool?sslmode=require&pgbouncer=true",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "PrismaAppSync_Function",
                    "memorySize": 512,
                    "timeout": 10
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "PrismaAppSync/AssetParameters",
            "children": {
              "84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352": {
                "id": "84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352",
                "path": "PrismaAppSync/AssetParameters/84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "PrismaAppSync/AssetParameters/84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "PrismaAppSync/AssetParameters/84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "PrismaAppSync/AssetParameters/84ffc9ecd9db85fa9ba8d48a138bd99cb360672637df6d89edbacda7f2711352/ArtifactHash"
                  }
                }
              }
            }
          },
          "PrismaAppSync_Role": {
            "id": "PrismaAppSync_Role",
            "path": "PrismaAppSync/PrismaAppSync_Role",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/PrismaAppSync_Role/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "appsync.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policies": [
                      {
                        "policyName": "allowEc2DescribeNetworkInterfaces",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "lambda:InvokeAsync",
                                "lambda:InvokeFunction"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "PrismaAppSyncFunctionABF3BD98",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    ],
                    "roleName": "PrismaAppSync_Role"
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "PrismaAppSync/PrismaAppSync_Role/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PrismaAppSync/PrismaAppSync_Role/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "PrismaAppSyncFunctionABF3BD98",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "PrismaAppSyncRoleDefaultPolicy771349FB",
                        "roles": [
                          {
                            "Ref": "PrismaAppSyncRole02C3FF71"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "PrismaAppSyncLambdaDatasource": {
            "id": "PrismaAppSyncLambdaDatasource",
            "path": "PrismaAppSync/PrismaAppSyncLambdaDatasource",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/PrismaAppSyncLambdaDatasource/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::DataSource",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "name": "PrismaAppSyncLambdaDataSource",
                    "type": "AWS_LAMBDA",
                    "lambdaConfig": {
                      "lambdaFunctionArn": {
                        "Fn::GetAtt": [
                          "PrismaAppSyncFunctionABF3BD98",
                          "Arn"
                        ]
                      }
                    },
                    "serviceRoleArn": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncRole02C3FF71",
                        "Arn"
                      ]
                    }
                  }
                }
              }
            }
          },
          "PrismaAppSyncNoneDatasource": {
            "id": "PrismaAppSyncNoneDatasource",
            "path": "PrismaAppSync/PrismaAppSyncNoneDatasource",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/PrismaAppSyncNoneDatasource/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::DataSource",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "name": "PrismaAppSyncNoneDataSource",
                    "type": "NONE"
                  }
                }
              }
            }
          },
          "getCoachQuery_resolver": {
            "id": "getCoachQuery_resolver",
            "path": "PrismaAppSync/getCoachQuery_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/getCoachQuery_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "getCoach",
                    "typeName": "Query",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "listCoachesQuery_resolver": {
            "id": "listCoachesQuery_resolver",
            "path": "PrismaAppSync/listCoachesQuery_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/listCoachesQuery_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "listCoaches",
                    "typeName": "Query",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "createCoachMutation_resolver": {
            "id": "createCoachMutation_resolver",
            "path": "PrismaAppSync/createCoachMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/createCoachMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "createCoach",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "updateCoachMutation_resolver": {
            "id": "updateCoachMutation_resolver",
            "path": "PrismaAppSync/updateCoachMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/updateCoachMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "updateCoach",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "upsertCoachMutation_resolver": {
            "id": "upsertCoachMutation_resolver",
            "path": "PrismaAppSync/upsertCoachMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/upsertCoachMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "upsertCoach",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "deleteCoachMutation_resolver": {
            "id": "deleteCoachMutation_resolver",
            "path": "PrismaAppSync/deleteCoachMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/deleteCoachMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "deleteCoach",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "deleteManyCoachesMutation_resolver": {
            "id": "deleteManyCoachesMutation_resolver",
            "path": "PrismaAppSync/deleteManyCoachesMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/deleteManyCoachesMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "deleteManyCoaches",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "getPlayerQuery_resolver": {
            "id": "getPlayerQuery_resolver",
            "path": "PrismaAppSync/getPlayerQuery_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/getPlayerQuery_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "getPlayer",
                    "typeName": "Query",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "listPlayersQuery_resolver": {
            "id": "listPlayersQuery_resolver",
            "path": "PrismaAppSync/listPlayersQuery_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/listPlayersQuery_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "listPlayers",
                    "typeName": "Query",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "createPlayerMutation_resolver": {
            "id": "createPlayerMutation_resolver",
            "path": "PrismaAppSync/createPlayerMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/createPlayerMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "createPlayer",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "updatePlayerMutation_resolver": {
            "id": "updatePlayerMutation_resolver",
            "path": "PrismaAppSync/updatePlayerMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/updatePlayerMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "updatePlayer",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "upsertPlayerMutation_resolver": {
            "id": "upsertPlayerMutation_resolver",
            "path": "PrismaAppSync/upsertPlayerMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/upsertPlayerMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "upsertPlayer",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "deletePlayerMutation_resolver": {
            "id": "deletePlayerMutation_resolver",
            "path": "PrismaAppSync/deletePlayerMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/deletePlayerMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "deletePlayer",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "deleteManyPlayersMutation_resolver": {
            "id": "deleteManyPlayersMutation_resolver",
            "path": "PrismaAppSync/deleteManyPlayersMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/deleteManyPlayersMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "deleteManyPlayers",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "getColorSchemeQuery_resolver": {
            "id": "getColorSchemeQuery_resolver",
            "path": "PrismaAppSync/getColorSchemeQuery_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/getColorSchemeQuery_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "getColorScheme",
                    "typeName": "Query",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "listColorSchemesQuery_resolver": {
            "id": "listColorSchemesQuery_resolver",
            "path": "PrismaAppSync/listColorSchemesQuery_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/listColorSchemesQuery_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "listColorSchemes",
                    "typeName": "Query",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "createColorSchemeMutation_resolver": {
            "id": "createColorSchemeMutation_resolver",
            "path": "PrismaAppSync/createColorSchemeMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/createColorSchemeMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "createColorScheme",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "updateColorSchemeMutation_resolver": {
            "id": "updateColorSchemeMutation_resolver",
            "path": "PrismaAppSync/updateColorSchemeMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/updateColorSchemeMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "updateColorScheme",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "upsertColorSchemeMutation_resolver": {
            "id": "upsertColorSchemeMutation_resolver",
            "path": "PrismaAppSync/upsertColorSchemeMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/upsertColorSchemeMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "upsertColorScheme",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "deleteColorSchemeMutation_resolver": {
            "id": "deleteColorSchemeMutation_resolver",
            "path": "PrismaAppSync/deleteColorSchemeMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/deleteColorSchemeMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "deleteColorScheme",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "deleteManyColorSchemesMutation_resolver": {
            "id": "deleteManyColorSchemesMutation_resolver",
            "path": "PrismaAppSync/deleteManyColorSchemesMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/deleteManyColorSchemesMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "deleteManyColorSchemes",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "getTeamQuery_resolver": {
            "id": "getTeamQuery_resolver",
            "path": "PrismaAppSync/getTeamQuery_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/getTeamQuery_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "getTeam",
                    "typeName": "Query",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "listTeamsQuery_resolver": {
            "id": "listTeamsQuery_resolver",
            "path": "PrismaAppSync/listTeamsQuery_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/listTeamsQuery_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "listTeams",
                    "typeName": "Query",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "createTeamMutation_resolver": {
            "id": "createTeamMutation_resolver",
            "path": "PrismaAppSync/createTeamMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/createTeamMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "createTeam",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "updateTeamMutation_resolver": {
            "id": "updateTeamMutation_resolver",
            "path": "PrismaAppSync/updateTeamMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/updateTeamMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "updateTeam",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "upsertTeamMutation_resolver": {
            "id": "upsertTeamMutation_resolver",
            "path": "PrismaAppSync/upsertTeamMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/upsertTeamMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "upsertTeam",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "deleteTeamMutation_resolver": {
            "id": "deleteTeamMutation_resolver",
            "path": "PrismaAppSync/deleteTeamMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/deleteTeamMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "deleteTeam",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "deleteManyTeamsMutation_resolver": {
            "id": "deleteManyTeamsMutation_resolver",
            "path": "PrismaAppSync/deleteManyTeamsMutation_resolver",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PrismaAppSync/deleteManyTeamsMutation_resolver/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AppSync::Resolver",
                  "aws:cdk:cloudformation:props": {
                    "apiId": {
                      "Fn::GetAtt": [
                        "PrismaAppSyncApi6F88B930",
                        "ApiId"
                      ]
                    },
                    "fieldName": "deleteManyTeams",
                    "typeName": "Mutation",
                    "dataSourceName": "PrismaAppSyncLambdaDataSource",
                    "kind": "UNIT"
                  }
                }
              }
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "PrismaAppSync/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "PrismaAppSync/CDKMetadata/Default"
              },
              "Condition": {
                "id": "Condition",
                "path": "PrismaAppSync/CDKMetadata/Condition"
              }
            }
          }
        }
      }
    }
  }
}